diff --git a/node_modules/eth-json-rpc-filters/hexUtils.js b/node_modules/eth-json-rpc-filters/hexUtils.js
index 83dc9e3..c931ec2 100644
--- a/node_modules/eth-json-rpc-filters/hexUtils.js
+++ b/node_modules/eth-json-rpc-filters/hexUtils.js
@@ -8,9 +8,17 @@ module.exports = {
   hexToInt,
   incrementHexInt,
   intToHex,
+  incrementHexIntNoLeftPad,
+  intToHexNoLeftPad,
   unsafeRandomBytes,
 }
 
+function incrementHexIntNoLeftPad(hexString){
+  if (hexString === undefined || hexString === null) return hexString
+  const value = hexToInt(hexString)
+  return intToHexNoLeftPad(value + 1)
+}
+
 function minBlockRef(...refs) {
   const sortedRefs = sortBlockRefs(refs)
   return sortedRefs[0]
@@ -29,6 +37,12 @@ function sortBlockRefs(refs) {
   })
 }
 
+function intToHexNoLeftPad(int) {
+  if (int === undefined || int === null) return int
+  let hexString = int.toString(16)
+  return '0x' + hexString
+}
+
 function bnToHex(bn) {
   return '0x' + bn.toString(16)
 }
diff --git a/node_modules/eth-json-rpc-filters/log-filter.js b/node_modules/eth-json-rpc-filters/log-filter.js
index ef55746..1e0b6bc 100644
--- a/node_modules/eth-json-rpc-filters/log-filter.js
+++ b/node_modules/eth-json-rpc-filters/log-filter.js
@@ -1,7 +1,7 @@
 const EthQuery = require('eth-query')
 const pify = require('pify')
 const BaseFilterWithHistory = require('./base-filter-history')
-const { bnToHex, hexToInt, incrementHexInt, minBlockRef, blockRefIsNumber } = require('./hexUtils')
+const { bnToHex, hexToInt, incrementHexIntNoLeftPad, minBlockRef, blockRefIsNumber } = require('./hexUtils')
 
 class LogFilter extends BaseFilterWithHistory {
 
@@ -46,13 +46,16 @@ class LogFilter extends BaseFilterWithHistory {
     let fromBlock
     // oldBlock is empty on first sync
     if (oldBlock) {
-      fromBlock = incrementHexInt(oldBlock)
+      fromBlock = incrementHexIntNoLeftPad(oldBlock)
     } else {
       fromBlock = newBlock
     }
     // fetch logs
     const params = Object.assign({}, this.params, { fromBlock, toBlock })
     const newLogs = await this._fetchLogs(params)
+    if (!newLogs) {
+      return;
+    }
     const matchingLogs = newLogs.filter(log => this.matchLog(log))
 
     // add to results
